name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        uv pip install -r requirements/dev.txt
    
    - name: Run code formatting check
      run: make format-check
    
    - name: Run linting
      run: make lint
    
    - name: Run type checking
      run: make type-check
      continue-on-error: true  # Don't fail on type issues for now
    
    - name: Run security checks
      run: make security-check
      continue-on-error: true  # Don't fail on security warnings
    
    - name: Run comprehensive security analysis
      run: make security-full
      continue-on-error: true  # Don't fail on security warnings
    
    - name: Run tests with coverage
      run: make test-coverage
    
    - name: Generate quality reports
      run: make quality-report
      if: always()
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-reports-${{ matrix.python-version }}
        path: reports/
        retention-days: 30

  pre-commit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install pre-commit
      run: pip install pre-commit
    
    - name: Run pre-commit
      run: pre-commit run --all-files